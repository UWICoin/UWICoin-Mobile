// http://ionicframework.com/docs/v2/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

form {
    padding: 0 10px;
}

.icon {
    color: color($colors, primary);
}

ion-header ion-icon.back-button-icon.icon {
    color: map-get($colors, light);
}

ion-icon{

    color: color($colors, light);

    &[name="arrow-back"], &[name="md-arrow-back"], &[name="arrow-round-back"], &[name="md-arrow-round-back"], &[name="menu"], {
        color: color($colors, light);
    }

    &[name="checkmark-circle"] {
        color: color($colors, secondary);
    }

    &[name="close-circle"] {
        color: color($colors, danger);
    }
}

ion-spinner {
    width: 100%;
    text-align: center;
}

.input-item {
    padding: 8px 0;
}

.logo-container {
    padding: 25px 0;
    text-align: center;

    .authentication-logo {
        width: 120px;
        height: 120px;
    }
}

.center {
    text-align: center;
}

.card {
    display: flex;
    flex-direction: column;
    padding: 1.5em;
    line-height: 2.5em;
    box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
    margin-bottom: 1em;
    border-bottom: 5px solid color($colors, primary);
    border-radius: 5px;
    cursor: pointer;
}

.heading {
    font-size: 1.5em;
    font-weight: 600;
    color: color($colors, primary)
}

.sub-heading {
    font-size: 1.2em;
    font-weight: 600;
}

.page {
    padding: 1.2em;
}

.defaultToast {
    > div {
        color: color($colors, light);
        background: color($colors, primary) !important;
    }
}

.successToast {
    > div {
        color: color($colors, light);
        background: color($colors, secondary) !important;
    }
}


.errorToast {
    > div {
        color: color($colors, light);
    background: color($colors, danger) !important;
    }
}

table {
    display: flex;
    flex-direction: column;
    text-align: left;

    tr {
        display: flex;
        flex-direction: row;
        width: 100%; 

        th {
            background-color: color($colors, primary);
            color: color($colors, light);
            font-weight: 600;
            font-size: 0.7em;
            text-transform: uppercase;
            border-bottom: 1px solid color($colors, primary);
        }
        
        td, th {
            flex-basis: 1;
            box-sizing: border-box;
            padding: 1em 0.5em;
            border-right: 1px solid color($colors, primary);

            &:last-child {
                border-right: none;
            }
        }

        td {
            font-size: 0.9em;
        }
    }
}

tbody {
    tr:nth-child(even) {
        background: rgba(color($colors, primary), 0.3);
    }
}

.img-container {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    overflow: hidden;
    box-shadow: 1px 2px 5px rgba(0, 0, 0, 0.3);

    .user-image {
        width: 80px;
        -webkit-filter: grayscale(50%);
        filter: grayscale(50%);
    }
}